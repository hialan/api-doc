{
    "swagger": "2.0",
    "info": {
        "title": "Swagger Petstore",
        "description": "This is a sample server Petstore server.  You can find out more about Swagger at <a href=\"http://swagger.io\">http://swagger.io</a> or on irc.freenode.net, #swagger.  For this sample, you can use the api key \"special-key\" to test the authorization filters",
        "termsOfService": "http://helloreverb.com/terms/",
        "contact": {
            "email": "apiteam@wordnik.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "host": "petstore.swagger.io",
    "basePath": "/v2",
    "schemes": [
        "http"
    ],
    "paths": {
        "/brandstore": {
            "post": {
                "tags": [
                    "brandstore"
                ],
                "summary": "Create brandstore",
                "description": "This can only be done by the logged in user.",
                "operationId": "createBrandStore",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Created brand storeobject",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrandStore"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/brandstore/{brandstore_id}": {
            "get": {
                "tags": [
                    "brandstore"
                ],
                "summary": "\u53d6\u5f97 {brandstore_id} \u7684\u57fa\u672c\u8cc7\u8a0a",
                "description": "",
                "operationId": "getUserFeeds",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "brandstore_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BrandStore"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/brandstore/{brandstore_id}/merchandises": {
            "get": {
                "tags": [
                    "brandstore"
                ],
                "summary": "\u53d6\u5f97\u5c6c\u65bc\u5546\u5e97 {brandstore_id} \u7684\u6240\u6709\u5546\u54c1\uff0c\u5305\u542b\u4e0a\u67b6\u4e2d\u4ee5\u53ca\u672a\u4e0a\u67b6\u7684",
                "description": "",
                "operationId": "getBrandStoreOwnMerchandise",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "brandstore_id",
                        "in": "path",
                        "description": "The name that needs to be fetched. Use user1 for testing. ",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Merchandise"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/brandstore/{brandstore_id}/orders": {
            "get": {
                "tags": [
                    "brandstore"
                ],
                "summary": "\u53d6\u5f97 {brandstore_id} \u7684\u8a02\u55ae\u6e05\u55ae",
                "description": "",
                "operationId": "getUserMerchandise",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "brandstore_id",
                        "in": "path",
                        "description": "The name that needs to be fetched. Use user1 for testing. ",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Order"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/brandstore/{brandstore_id}/order/{order_id}": {
            "get": {
                "tags": [
                    "brandstore"
                ],
                "summary": "\u53d6\u5f97 {brandstore_id} \u7684\u8a02\u55ae\u660e\u7d30",
                "description": "",
                "operationId": "getUserMerchandise",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "brandstore",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "order_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "brandstore"
                ],
                "summary": "\u66f4\u65b0\u8a02\u55ae\u660e\u7d30",
                "description": "",
                "operationId": "getUserMerchandise",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "brandstore_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "order_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "$ref": "#/definitions/Order"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/brandstore/{brandstore_id}/order/{order_id}/comment": {
            "post": {
                "tags": [
                    "brandstore"
                ],
                "summary": "\u65b0\u589e\u8a02\u55ae\u7559\u8a00",
                "description": "",
                "operationId": "getUserMerchandise",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "brandstore_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "order_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "$ref": "#/definitions/Comment"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/user": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Create user",
                "description": "This can only be done by the logged in user.",
                "operationId": "createUser",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Created user object",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/user/login": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Logs user into the system",
                "description": "",
                "operationId": "loginUser",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "The user name for login",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "The password for login in clear text",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {
                            "X-Rate-Limit": {
                                "description": "calls per hour allowed by the user",
                                "type": "integer",
                                "format": "int32"
                            },
                            "X-Expires-After": {
                                "description": "date in UTC when toekn expires",
                                "type": "string",
                                "format": "date-time"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username/password supplied"
                    }
                }
            }
        },
        "/user/{username}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get user by user name",
                "description": "",
                "operationId": "getUserByName",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The name that needs to be fetched. Use user1 for testing. ",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "Updated user",
                "description": "This can only be done by the logged in user.",
                "operationId": "updateUser",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "name that need to be deleted",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Updated user object",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid user supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "user"
                ],
                "summary": "Delete user",
                "description": "This can only be done by the logged in user.",
                "operationId": "deleteUser",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The name that needs to be deleted",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/user/{username}/following": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get collections of user names for every users that {username} is following",
                "description": "",
                "operationId": "getUserFollowings",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The name that needs to be fetched. Use user1 for testing. ",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/user/{username}/merchandises": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "User \u7ba1\u7406\u81ea\u5df1\u6240\u6709\u5546\u54c1\uff0c\u5305\u542b\u4e0a\u67b6\u4e2d\u4ee5\u53ca\u672a\u4e0a\u67b6\u7684",
                "description": "",
                "operationId": "getUserOwnMerchandise",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The name that needs to be fetched. Use user1 for testing. ",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Merchandise"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/user/{username}/orders": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "\u53d6\u5f97 {username} \u7684\u8a02\u55ae\u6e05\u55ae",
                "description": "",
                "operationId": "getUserMerchandise",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The name that needs to be fetched. Use user1 for testing. ",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Order"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/user/{username}/order/{order_id}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "\u53d6\u5f97 {username} \u7684\u8a02\u55ae\u660e\u7d30",
                "description": "",
                "operationId": "getUserMerchandise",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "order_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "\u66f4\u65b0 {username} \u7684\u8a02\u55ae\u660e\u7d30",
                "description": "",
                "operationId": "getUserMerchandise",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "order_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "$ref": "#/definitions/Order"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/user/{username}/order/{order_id}/comment": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "\u65b0\u589e\u8a02\u55ae\u7559\u8a00",
                "description": "",
                "operationId": "getUserMerchandise",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "order_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "$ref": "#/definitions/Comment"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/channel/{channel_id}": {
            "get": {
                "tags": [
                    "channel"
                ],
                "summary": "\u53d6\u5f97 channel \u8cc7\u8a0a",
                "description": "",
                "operationId": "getUserFeeds",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Channel"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/channel/{channel_id}/activities": {
            "get": {
                "tags": [
                    "channel"
                ],
                "summary": "\u770b {channel} \u7684 feeds",
                "description": "",
                "operationId": "getUserFeeds",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Activity"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/channel/{channel_id}/activity": {
            "post": {
                "tags": [
                    "channel"
                ],
                "summary": "\u5728 {channel_id} \u7684 feeds \u767c\u4f48\u65b0\u8a0a\u606f",
                "description": "",
                "operationId": "postUserFeeds",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "\u5728 {channel_id} \u7684 feed \u767c\u5e03\u7684\u8a0a\u606f\u5167\u5bb9",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Activity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ApiResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/channel/{channel_id}/activity/{activity_id}/comment": {
            "post": {
                "tags": [
                    "channel"
                ],
                "summary": "\u5c0d\u4e00\u500b activity \u767c\u8868\u56de\u8986",
                "description": "",
                "operationId": "postUserFeeds",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Comment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ApiResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/channel/{channel_id}/merchandises": {
            "get": {
                "tags": [
                    "channel"
                ],
                "summary": "\u67e5\u770b {channel_id} \u516c\u958b\u51fa\u4f86\u7684\u5546\u54c1",
                "description": "",
                "operationId": "getUserMerchandise",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "The name that needs to be fetched. Use user1 for testing. ",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Merchandise"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "channel"
                ],
                "summary": "\u5c07\u5546\u54c1\u5728\u6b64\u5546\u5e97\u4e0a\u67b6",
                "description": "",
                "operationId": "getBrandstoreMerchandise",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "\u6b32\u4e0a\u67b6\u7684\u5546\u54c1",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Merchandise"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/channel/{channel_id}/merchandise/{merchandise_id}/placeorder": {
            "post": {
                "tags": [
                    "channel"
                ],
                "summary": "\u8cfc\u8cb7\u6b64\u5546\u54c1",
                "description": "",
                "operationId": "getBrandstoreMerchandise",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "merchandise_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/channel/{channel_id}/merchandise/{merchandise_id}/bid": {
            "post": {
                "tags": [
                    "channel"
                ],
                "summary": "\u4e0b\u6a19\u5546\u54c1(\u5982\u679c\u6b64 merchandise type=bid)",
                "description": "",
                "operationId": "getBrandstoreMerchandise",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "merchandise_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "\u51fa\u50f9",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/channel/{channel_id}/merchandise/{merchandise_id}/comment": {
            "post": {
                "tags": [
                    "channel"
                ],
                "summary": "\u56de\u8986",
                "description": "",
                "operationId": "getBrandstoreMerchandise",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "merchandise_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "\u51fa\u50f9",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Comment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/channel/{channel_id}/follow": {
            "post": {
                "tags": [
                    "channel"
                ],
                "summary": "follow {channel_id}",
                "description": "",
                "operationId": "getUserFollowings",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/channel/{channel_id}/unfollow": {
            "post": {
                "tags": [
                    "channel"
                ],
                "summary": "unfollow {channel_id}",
                "description": "",
                "operationId": "getUserFollowings",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/channel/{channel_id}/followers": {
            "get": {
                "tags": [
                    "channel"
                ],
                "summary": "Get collections of user IDs for every user following {username}",
                "description": "",
                "operationId": "getUserFollowers",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "merket_id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        }
    },
    "definitions": {
        "ApiResponse": {
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "##default"
            }
        },
        "User": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "status": {
                    "description": "User Status",
                    "type": "integer",
                    "format": "int32"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "picture": {
                    "type": "string"
                },
                "channel_id": {
                    "type": "string"
                },
                "created_time": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "xml": {
                "name": "User"
            }
        },
        "BrandStore": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "description": "BrandStore status",
                    "type": "integer",
                    "format": "int32"
                },
                "email": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "channel_id": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "BrandStore"
            }
        },
        "Comment": {
            "properties": {
                "id": {
                    "description": "BrandStore status",
                    "type": "integer",
                    "format": "int32"
                },
                "user_id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "created_time": {
                    "description": "message create time",
                    "type": "string",
                    "format": "date-time"
                }
            },
            "xml": {
                "name": "Comment"
            }
        },
        "Activity": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "message": {
                    "type": "string"
                },
                "share_type": {
                    "type": "string",
                    "enum": [
                        "url",
                        "merchandise",
                        "activity"
                    ]
                },
                "share_data": {
                    "type": "string"
                },
                "comments": {
                    "description": "replies of the comment",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Comment"
                    }
                },
                "created_time": {
                    "description": "message create time",
                    "type": "string",
                    "format": "date-time"
                }
            },
            "xml": {
                "name": "Activity"
            }
        },
        "Merchandise": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "online",
                        "offline"
                    ]
                },
                "owner_type": {
                    "type": "string",
                    "enum": [
                        "user",
                        "brandstore"
                    ]
                },
                "owner_id": {
                    "type": "string"
                },
                "name": {
                    "description": "product name",
                    "type": "string"
                },
                "description": {
                    "description": "product description",
                    "type": "string"
                },
                "initial_price": {
                    "description": "Initial price, for bid",
                    "type": "string"
                },
                "buynow_price": {
                    "description": "Initial price, for bid",
                    "type": "string"
                },
                "currency": {
                    "description": "currency, follow ISO 4217 https://en.wikipedia.org/wiki/ISO_4217",
                    "type": "string"
                },
                "quantity": {
                    "description": "quantity",
                    "type": "integer"
                },
                "comments": {
                    "description": "comments belongs to the merchandise",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Comment"
                    }
                }
            },
            "xml": {
                "name": "Merchandise"
            }
        },
        "Order": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "open",
                        "closed"
                    ]
                },
                "seller_type": {
                    "type": "string",
                    "enum": [
                        "user",
                        "brandstore"
                    ]
                },
                "seller_id": {
                    "type": "string"
                },
                "buyer_id": {
                    "type": "string"
                },
                "merchandise_id": {
                    "type": "string"
                },
                "checkout_price": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "comments": {
                    "description": "replies of the comment",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Comment"
                    }
                },
                "created_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "closed_time": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "xml": {
                "name": "Order"
            }
        },
        "Channel": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "description": "channel name",
                    "type": "string"
                },
                "owner": {
                    "description": "channel ownerid",
                    "type": "string"
                },
                "follower_count": {
                    "description": "BrandStore follower_count",
                    "type": "integer",
                    "format": "int32"
                },
                "push_type": {
                    "type": "string",
                    "enum": [
                        "owner",
                        "follower",
                        "whitelist",
                        "everyone"
                    ]
                },
                "closed_time": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "xml": {
                "name": "Channel"
            }
        }
    },
    "tags": [
        {
            "name": "user",
            "description": "Access to users"
        },
        {
            "name": "brandstore",
            "description": "access to brand store"
        },
        {
            "name": "channel",
            "description": "access to channel"
        }
    ],
    "externalDocs": {
        "description": "editor.swagger.io",
        "url": "http://editor.swagger.io/#/"
    }
}